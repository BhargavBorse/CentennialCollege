{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ButtonsComponent() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userName = _React$useState2[0],\n    setUserName = _React$useState2[1];\n  var buttonClicked = function buttonClicked() {\n    alert(`Thank ${userName} for entering your name`);\n    setUserName(\"\");\n  };\n  var textClicked = function textClicked() {\n    alert('The Touchable Opacity Component Clicked');\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      style: styles.textinput,\n      placeholder: \"Enter Your Name\",\n      onChangeText: function onChangeText(value) {\n        return setUserName(value);\n      },\n      value: userName\n    }), _jsx(Button, {\n      styles: styles.button,\n      onPress: buttonClicked,\n      title: \"Click Me Button\"\n    }), _jsx(TouchableOpacity, {\n      styles: styles.button,\n      onPress: textClicked,\n      children: _jsx(Text, {\n        style: styles.textView,\n        children: \"Click Me Touchable Opacity\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  button: {\n    alignSelf: \"stretch\",\n    alignItems: \"center\",\n    padding: 15,\n    backgroundColor: \"#59cbbd\",\n    marginTop: 10\n  },\n  textinput: {\n    alignSelf: \"stretch\",\n    height: 40,\n    marginBottom: 30,\n    color: \"#000\",\n    borderBottomColor: \"#f8f8f8\",\n    borderBottomWidth: 1\n  },\n  textView: {\n    marginTop: 10,\n    marginBottom: 10,\n    color: \"gray\",\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","Button","TouchableOpacity","TextInput","jsx","_jsx","jsxs","_jsxs","ButtonsComponent","_React$useState","useState","_React$useState2","_slicedToArray","userName","setUserName","buttonClicked","alert","textClicked","children","style","styles","textinput","placeholder","onChangeText","value","button","onPress","title","textView","create","alignSelf","alignItems","padding","backgroundColor","marginTop","height","marginBottom","color","borderBottomColor","borderBottomWidth","fontSize"],"sources":["/Users/bhargavborse/Documents/Github/CentennialCollege/WebTech-712/Lab-3/Components/ButtonsComponent.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text ,StyleSheet, Button, TouchableOpacity, TextInput} from \"react-native\";\n\nexport default function ButtonsComponent() {\n    const [userName, setUserName] = React.useState(\"\");\n    const buttonClicked = () => {\n        alert(`Thank ${userName} for entering your name`);\n        setUserName(\"\");\n    }\n    const textClicked = () => {\n        alert('The Touchable Opacity Component Clicked');\n    }\n    return (\n        <View>\n            <TextInput style={styles.textinput}\n                placeholder=\"Enter Your Name\"\n                onChangeText={value => setUserName(value) }\n                value={userName}\n            />\n\n            <Button styles={styles.button}\n                onPress={buttonClicked}\n                title=\"Click Me Button\">\n                \n            </Button>\n            <TouchableOpacity\n                styles={styles.button}\n                onPress={textClicked}>\n                {/* <ImageComponent\n                    imageSource={require('../assets/beach.jpg')}\n                     title=\"Beach Image\" /> */}\n                { <Text style={styles.textView}>Click Me Touchable Opacity</Text> }\n            </TouchableOpacity>\n        </View>\n\n    );\n}\n\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: \"stretch\",\n    alignItems: \"center\",\n    padding: 15,\n    backgroundColor: \"#59cbbd\",\n    marginTop: 10,\n    },\n     textinput: {\n    alignSelf: \"stretch\",\n    height: 40,\n    marginBottom: 30,\n    color: \"#000\",\n    borderBottomColor: \"#f8f8f8\",\n    borderBottomWidth: 1,\n  },\n      textView:{\n    marginTop:10,\n    marginBottom:10,\n    color: \"gray\",\n    fontSize:20\n  }\n    \n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EACvC,IAAAC,eAAA,GAAgCZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA3CI,QAAQ,GAAAF,gBAAA;IAAEG,WAAW,GAAAH,gBAAA;EAC5B,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IACxBC,KAAK,CAAE,SAAQH,QAAS,yBAAwB,CAAC;IACjDC,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EACD,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBD,KAAK,CAAC,yCAAyC,CAAC;EACpD,CAAC;EACD,OACIT,KAAA,CAACT,IAAI;IAAAoB,QAAA,GACDb,IAAA,CAACF,SAAS;MAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAC/BC,WAAW,EAAC,iBAAiB;MAC7BC,YAAY,EAAE,SAAAA,aAAAC,KAAK;QAAA,OAAIV,WAAW,CAACU,KAAK,CAAC;MAAA,CAAE;MAC3CA,KAAK,EAAEX;IAAS,CACnB,CAAC,EAEFR,IAAA,CAACJ,MAAM;MAACmB,MAAM,EAAEA,MAAM,CAACK,MAAO;MAC1BC,OAAO,EAAEX,aAAc;MACvBY,KAAK,EAAC;IAAiB,CAEnB,CAAC,EACTtB,IAAA,CAACH,gBAAgB;MACbkB,MAAM,EAAEA,MAAM,CAACK,MAAO;MACtBC,OAAO,EAAET,WAAY;MAAAC,QAAA,EAInBb,IAAA,CAACN,IAAI;QAACoB,KAAK,EAAEC,MAAM,CAACQ,QAAS;QAAAV,QAAA,EAAC;MAA0B,CAAM;IAAC,CACnD,CAAC;EAAA,CACjB,CAAC;AAGf;AAGA,IAAME,MAAM,GAAGpB,UAAU,CAAC6B,MAAM,CAAC;EAC/BJ,MAAM,EAAE;IACNK,SAAS,EAAE,SAAS;IACpBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE;EACX,CAAC;EACAb,SAAS,EAAE;IACZS,SAAS,EAAE,SAAS;IACpBK,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,MAAM;IACbC,iBAAiB,EAAE,SAAS;IAC5BC,iBAAiB,EAAE;EACrB,CAAC;EACGX,QAAQ,EAAC;IACXM,SAAS,EAAC,EAAE;IACZE,YAAY,EAAC,EAAE;IACfC,KAAK,EAAE,MAAM;IACbG,QAAQ,EAAC;EACX;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}